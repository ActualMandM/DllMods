#include "ArchiveTreePatcher.h"

extern "C" __declspec(dllexport) void Init()
{
	// Swap the image for "You can now switch between the two Sonics."
	WRITE_MEMORY(0x15C5624, uint8_t, 0x70);

	// Swap the mission voice clips
	WRITE_MEMORY(0x01A6D05C, uint8_t, 3313003) /* Amy */
	WRITE_MEMORY(0x01A6D084, uint8_t, 3319003) /* Blaze */
	WRITE_MEMORY(0x01A6D094, uint8_t, 3317003) /* Charmy */
	WRITE_MEMORY(0x01A6D058, uint8_t, 3300003) /* Classic Tails */
	WRITE_MEMORY(0x01A6D074, uint8_t, 3314003) /* Cream */
	WRITE_MEMORY(0x01A6D078, uint8_t, 3316003) /* Espio */
	WRITE_MEMORY(0x01A6D064, uint8_t, 3320003) /* Knuckles */
	WRITE_MEMORY(0x01A6D07C, uint8_t, 3315003) /* Rouge */
	WRITE_MEMORY(0x01A6D080, uint8_t, 3318003) /* Vector */

	// Swap the Time Eater voice clips
	WRITE_MEMORY(0x015CB4D0, uint8_t, 3500001) /* TC_Bls001 */
	WRITE_MEMORY(0x015CB4D4, uint8_t, 3500003) /* TC_Bls002 */
	WRITE_MEMORY(0x015CB4D8, uint8_t, 3500005) /* TC_Bls004 */
	WRITE_MEMORY(0x015CB4DC, uint8_t, 3500007) /* TC_Bls005 */
	WRITE_MEMORY(0x015CB540, uint8_t, 3510001) /* TL_Bls001 */
	WRITE_MEMORY(0x015CB544, uint8_t, 3510003) /* TL_Bls002 */
	WRITE_MEMORY(0x015CB548, uint8_t, 3510005) /* TL_Bls004 */
	WRITE_MEMORY(0x015CB54C, uint8_t, 3510007) /* TL_Bls005 */
	WRITE_MEMORY(0x015CB5A4, uint8_t, 3520001) /* KN_Bls001 */
	WRITE_MEMORY(0x015CB5A8, uint8_t, 3520003) /* KN_Bls002 */
	WRITE_MEMORY(0x015CB5AC, uint8_t, 3520005) /* KN_Bls004 */
	WRITE_MEMORY(0x015CB5B0, uint8_t, 3520007) /* KN_Bls005 */
	WRITE_MEMORY(0x015CB604, uint8_t, 3530001) /* AM_Bls001 */
	WRITE_MEMORY(0x015CB608, uint8_t, 3530003) /* AM_Bls002 */
	WRITE_MEMORY(0x015CB60C, uint8_t, 3530005) /* AM_Bls004 */
	WRITE_MEMORY(0x015CB610, uint8_t, 3530007) /* AM_Bls005 */
	WRITE_MEMORY(0x015CB664, uint8_t, 3540001) /* CR_Bls001 */
	WRITE_MEMORY(0x015CB668, uint8_t, 3540003) /* CR_Bls002 */
	WRITE_MEMORY(0x015CB66C, uint8_t, 3540005) /* CR_Bls004 */
	WRITE_MEMORY(0x015CB670, uint8_t, 3540007) /* CR_Bls005 */
	WRITE_MEMORY(0x015CB6C4, uint8_t, 3550001) /* RG_Bls001 */
	WRITE_MEMORY(0x015CB6C8, uint8_t, 3550003) /* RG_Bls002 */
	WRITE_MEMORY(0x015CB6CC, uint8_t, 3550005) /* RG_Bls004 */
	WRITE_MEMORY(0x015CB6D0, uint8_t, 3550007) /* RG_Bls005 */
	WRITE_MEMORY(0x015CB724, uint8_t, 3560001) /* ES_Bls001 */
	WRITE_MEMORY(0x015CB728, uint8_t, 3560003) /* ES_Bls002 */
	WRITE_MEMORY(0x015CB72C, uint8_t, 3560005) /* ES_Bls004 */
	WRITE_MEMORY(0x015CB730, uint8_t, 3560007) /* ES_Bls005 */
	WRITE_MEMORY(0x015CB784, uint8_t, 3570001) /* CH_Bls001 */
	WRITE_MEMORY(0x015CB788, uint8_t, 3570003) /* CH_Bls002 */
	WRITE_MEMORY(0x015CB78C, uint8_t, 3570005) /* CH_Bls004 */
	WRITE_MEMORY(0x015CB790, uint8_t, 3570007) /* CH_Bls005 */
	WRITE_MEMORY(0x015CB7E4, uint8_t, 3580001) /* VC_Bls001 */
	WRITE_MEMORY(0x015CB7E8, uint8_t, 3580003) /* VC_Bls002 */
	WRITE_MEMORY(0x015CB7EC, uint8_t, 3580005) /* VC_Bls004 */
	WRITE_MEMORY(0x015CB7F0, uint8_t, 3580007) /* VC_Bls005 */
	WRITE_MEMORY(0x015CB844, uint8_t, 3590001) /* BZ_Bls001 */
	WRITE_MEMORY(0x015CB848, uint8_t, 3590003) /* BZ_Bls002 */
	WRITE_MEMORY(0x015CB84C, uint8_t, 3590005) /* BZ_Bls004 */
	WRITE_MEMORY(0x015CB850, uint8_t, 3590007) /* BZ_Bls005 */
	WRITE_MEMORY(0x015CB8A4, uint8_t, 3600001) /* SD_Bls001 */
	WRITE_MEMORY(0x015CB8A8, uint8_t, 3600003) /* SD_Bls002 */
	WRITE_MEMORY(0x015CB8AC, uint8_t, 3600005) /* SD_Bls004 */
	WRITE_MEMORY(0x015CB8B0, uint8_t, 3600007) /* SD_Bls005 */
	WRITE_MEMORY(0x015CB904, uint8_t, 3610001) /* SV_Bls001 */
	WRITE_MEMORY(0x015CB908, uint8_t, 3610003) /* SV_Bls002 */
	WRITE_MEMORY(0x015CB90C, uint8_t, 3610005) /* SV_Bls004 */
	WRITE_MEMORY(0x015CB910, uint8_t, 3610007) /* SV_Bls005 */

	ArchiveTreePatcher::applyPatches();
}
